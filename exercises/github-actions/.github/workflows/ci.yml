name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests
      run: |
        pytest test_data_analyzer.py -v --cov=data_analyzer
    
    - name: Run application smoke test
      run: |
        python data_analyzer.py --create-sample
        python data_analyzer.py --data data/sample_dataset.json --mode standard

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -t data-analyzer:test .
    
    - name: Test in container
      run: |
        docker run --rm data-analyzer:test python -m pytest test_data_analyzer.py -v
    
    - name: Run application in container
      run: |
        docker run --rm -e ANALYSIS_MODE=advanced data-analyzer:test

  quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install quality tools
      run: |
        pip install flake8 black
    
    - name: Check code formatting
      run: |
        black --check --diff *.py || echo "Code formatting issues found"
    
    - name: Lint with flake8
      run: |
        flake8 *.py --max-line-length=88 --ignore=E203,W503 || echo "Linting issues found"
